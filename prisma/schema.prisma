generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model appointment {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  student_id  String   @db.Uuid
  calendar_id String   @db.Uuid
  status      String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  calendar    calendar @relation(fields: [calendar_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user     @relation(fields: [student_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model calendar {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  instructor_id String        @db.Uuid
  date          DateTime      @db.Date
  start_time    DateTime      @db.Time(6)
  end_time      DateTime      @db.Time(6)
  created_at    DateTime      @default(now()) @db.Timestamp(6)
  updated_at    DateTime      @default(now()) @db.Timestamp(6)
  appointment   appointment[]
  instructor    instructor    @relation(fields: [instructor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model instructor {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name String     @db.VarChar(255)
  last_name  String     @db.VarChar(255)
  school_id  String     @db.Uuid
  created_at DateTime   @default(now()) @db.Timestamp(6)
  updated_at DateTime   @default(now()) @db.Timestamp(6)
  calendar   calendar[]
  school     school     @relation(fields: [school_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model price {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  school_id       String   @db.Uuid
  lesson_duration Int
  price           Int
  created_at      DateTime @default(now()) @db.Timestamp(6)
  updated_at      DateTime @default(now()) @db.Timestamp(6)
  school          school   @relation(fields: [school_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model school {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?      @db.VarChar(255)
  image       String?      @db.VarChar(255)
  name        String       @db.VarChar(255)
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  user_id     String       @db.Uuid
  tenant_id   String       @db.VarChar(255)
  instructor  instructor[]
  price       price[]
  user        user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  appointment appointment[]
  school      school[]
}
